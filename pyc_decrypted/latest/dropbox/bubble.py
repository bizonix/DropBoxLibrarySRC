#Embedded file name: dropbox/bubble.py
from __future__ import absolute_import

class BubbleKind(object):
    CAMERA_FIND_TIME_REMAINING = 'CAMERA_FIND_TIME_REMAINING'
    CAMERA_IMPORT_CANCELLED = 'CAMERA_IMPORT_CANCELLED'
    CAMERA_IMPORT_DEVICE_LOCKED = 'CAMERA_IMPORT_DEVICE_LOCKED'
    CAMERA_IMPORT_DISCONNECTED = 'CAMERA_IMPORT_DISCONNECTED'
    CAMERA_IMPORT_LOW_DISK_SPACE = 'CAMERA_IMPORT_LOW_DISK_SPACE'
    CAMERA_IMPORT_LOW_DROPBOX_SPACE = 'CAMERA_IMPORT_LOW_DROPBOX_SPACE'
    CAMERA_IMPORT_NO_NEW_MEDIA = 'CAMERA_IMPORT_NO_NEW_MEDIA'
    CAMERA_IMPORT_SELECTIVE_SYNC_ERROR = 'CAMERA_IMPORT_SELECTIVE_SYNC_ERROR'
    CAMERA_IMPORT_SUCCEEDED = 'CAMERA_IMPORT_SUCCEEDED'
    CAMERA_IMPORT_TIME_REMAINING = 'CAMERA_IMPORT_TIME_REMAINING'
    CAMERA_IMPORT_NOT_INTERNET_CONNECTED = 'CAMERA_IMPORT_NOT_INTERNET_CONNECTED'
    CAMERA_IMPORT_ALBUM_CREATION_ERROR = 'CAMERA_IMPORT_ALBUM_CREATION_ERROR'
    CAMERA_IMPORT_UNKNOWN_ERROR = 'CAMERA_IMPORT_UNKNOWN_ERROR'
    DEBUG_BUBBLE_HELLO = 'DEBUG_BUBBLE_HELLO'
    DEBUG_BUBBLE_LONG = 'DEBUG_BUBBLE_LONG'
    DEBUG_BUBBLE_PARTIAL = 'DEBUG_BUBBLE_PARTIAL'
    DEBUG_BUBBLE_AUTOUPDATE = 'DEBUG_BUBBLE_AUTOUPDATE'
    DROPBOX_FOLDER_SYNCED = 'DROPBOX_FOLDER_SYNCED'
    DROPBOX_LINKED = 'DROPBOX_LINKED'
    INSTALLER_TAGS = 'INSTALLER_TAGS'
    JOINED_SHARED_FOLDER = 'JOINED_SHARED_FOLDER'
    LEFT_SHARED_FOLDER = 'LEFT_SHARED_FOLDER'
    LINKED_APPLICATION = 'LINKED_APPLICATION'
    LOW_DISK_SPACE = 'LOW_DISK_SPACE'
    MANUAL_INSTALL_SUCCESS = 'MANUAL_INSTALL_SUCCESS'
    MOVED_DROPBOX_FOLDER = 'MOVED_DROPBOX_FOLDER'
    MULTIPLE_FILES_ADDED = 'MULTIPLE_FILES_ADDED'
    MULTIPLE_FILES_DELETED = 'MULTIPLE_FILES_DELETED'
    MULTIPLE_FILES_UPDATED = 'MULTIPLE_FILES_UPDATED'
    PROXY_SETTINGS_INCORRECT = 'PROXY_SETTINGS_INCORRECT'
    QUOTA_INCREASED = 'QUOTA_INCREASED'
    QUOTA_REDUCED = 'QUOTA_REDUCED'
    QUOTA_WARNING = 'QUOTA_WARNING'
    SECURE_CONNECTION_ERROR = 'SECURE_CONNECTION_ERROR'
    SERVER_BUBBLE_BROADCAST = 'SERVER_BUBBLE_BROADCAST'
    SHARED_FOLDER_REMOVED = 'SHARED_FOLDER_REMOVED'
    SHMODEL_GET_LINK = 'SHMODEL_GET_LINK'
    SHMODEL_ERROR = 'SHMODEL_ERROR'
    SHMODEL_COPIED_TO_CLIPBOARD = 'SHMODEL_COPIED_TO_CLIPBOARD'
    SINGLE_FILE_ADDED = 'SINGLE_FILE_ADDED'
    SINGLE_FILE_DELETED = 'SINGLE_FILE_DELETED'
    SINGLE_FILE_UPDATED = 'SINGLE_FILE_UPDATED'
    UNABLE_TO_MONITOR_FILESYSTEM = 'UNABLE_TO_MONITOR_FILESYSTEM'
    UNLINKED_APPLICATION = 'UNLINKED_APPLICATION'
    USER_NOTIFICATION_BUBBLE = 'USER_NOTIFICATION_BUBBLE'
    XATTR_ERROR = 'XATTR_ERROR'
    WINDOWS_SCREENSHOT = 'WINDOWS_SCREENSHOT'
    SCREENSHOTS_ERROR = 'SCREENSHOTS_ERROR'


class Bubble(object):

    def __init__(self, bubble_kind, msg, caption, bubble_context = None, ctxt_ref = None, msg_passive = None, show_when_disabled = False):
        self.bubble_kind = bubble_kind
        self.msg = msg
        self.caption = caption
        self.bubble_context = bubble_context
        self.ctxt_ref = ctxt_ref
        self.msg_passive = msg_passive
        self.show_when_disabled = show_when_disabled
        if self.has_valid_ctxt_ref():
            self.bubble_context.get_context_ref(self.ctxt_ref).bubble_kind = self.bubble_kind

    def has_valid_ctxt_ref(self):
        return self.bubble_context is not None and self.ctxt_ref is not None and self.bubble_context.is_valid_context_ref(self.ctxt_ref)

    def has_no_ctxt_ref(self):
        return self.ctxt_ref is None
